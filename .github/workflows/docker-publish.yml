name: Build & Publish Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  # Falls du keine Variable IMAGE_NAME setzt, wird automatisch "owner/repo" verwendet.
  IMAGE_NAME: ${{ vars.IMAGE_NAME != '' && vars.IMAGE_NAME || format('{0}/{1}', github.repository_owner, github.event.repository.name) }}

jobs:
  docker:
    name: Build ${{ github.ref_name }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tags für main
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=edge,enable={{is_default_branch}}
            # Tags für Semver-Releases: v1.2.3 -> 1.2.3, 1.2, 1
            type=semver,pattern={{version}},prefix=,enable={{startsWith(github.ref, 'refs/tags/v')}}
            type=semver,pattern={{major}}.{{minor}},prefix=,enable={{startsWith(github.ref, 'refs/tags/v')}}
            type=semver,pattern={{major}},prefix=,enable={{startsWith(github.ref, 'refs/tags/v')}}
            # Commit-SHA als Fallback
            type=sha,format=short,prefix=sha-,enable={{!startsWith(github.ref, 'refs/tags/')}}

      - name: Build (PR: no push / main+tags: push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile